// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package wires

import (
	"github.com/aljrubior/amc-ui-rest-facade/clients/cloudhub"
	"github.com/aljrubior/amc-ui-rest-facade/clients/fabric"
	"github.com/aljrubior/amc-ui-rest-facade/clients/hybrid"
	"github.com/aljrubior/amc-ui-rest-facade/clients/runtimeFabricManagement"
	"github.com/aljrubior/amc-ui-rest-facade/config"
	"github.com/aljrubior/amc-ui-rest-facade/controllers/application"
	"github.com/aljrubior/amc-ui-rest-facade/datasources"
	"github.com/aljrubior/amc-ui-rest-facade/datasources/applications"
	fabric3 "github.com/aljrubior/amc-ui-rest-facade/datasources/applications/fabric"
	application2 "github.com/aljrubior/amc-ui-rest-facade/services/application"
	cloudhub2 "github.com/aljrubior/amc-ui-rest-facade/services/cloudhub"
	fabric2 "github.com/aljrubior/amc-ui-rest-facade/services/fabric"
	hybrid2 "github.com/aljrubior/amc-ui-rest-facade/services/hybrid"
	runtimeFabricManagement2 "github.com/aljrubior/amc-ui-rest-facade/services/runtimeFabricManagement"
)

// Injectors from initializeApplicationController.go:

func InitializeApplicationController(datasources2 []datasources.ApplicationDatasource) (application.Controller, error) {
	defaultService := application2.NewDefaultService(datasources2)
	defaultController := application.NewDefaultController(defaultService)
	return defaultController, nil
}

// Injectors from initializeCloudhubApplicationDatasource.go:

func InitializeCloudhubApplicationDatasource(configClient config.CloudhubConfigClient) (datasources.ApplicationDatasource, error) {
	defaultHttpClient := cloudhub.NewDefaultHttpClient(configClient)
	defaultService := cloudhub2.NewDefaultService(defaultHttpClient)
	cloudhubApplicationDatasource := applications.NewCloudhubApplicationDatasource(defaultService)
	return cloudhubApplicationDatasource, nil
}

// Injectors from initializeFabricApplicationDatasource.go:

func InitializeFabricApplicationDatasource(fabricConfigClient config.FabricConfigClient, runtimeFabricManagementClientConfig config.RuntimeFabricManagementClientConfig) (datasources.ApplicationDatasource, error) {
	defaultHttpClient := fabric.NewDefaultHttpClient(fabricConfigClient)
	defaultService := fabric2.NewDefaultService(defaultHttpClient)
	runtimeFabricManagementDefaultHttpClient := runtimeFabricManagement.NewDefaultHttpClient(runtimeFabricManagementClientConfig)
	runtimeFabricManagementDefaultService := runtimeFabricManagement2.NewDefaultService(runtimeFabricManagementDefaultHttpClient)
	fabricApplicationDatasource := fabric3.NewFabricApplicationDatasource(defaultService, runtimeFabricManagementDefaultService)
	return fabricApplicationDatasource, nil
}

// Injectors from initializeHybridApplicationDatasource.go:

func InitializeHybridApplicationDatasource(hybridConfigClient config.HybridConfigClient) (datasources.ApplicationDatasource, error) {
	defaultHttpClient := hybrid.NewDefaultHttpClient(hybridConfigClient)
	defaultService := hybrid2.NewDefaultService(defaultHttpClient)
	hybridApplicationDatasource := applications.NewHybridApplicationDatasource(defaultService)
	return hybridApplicationDatasource, nil
}
